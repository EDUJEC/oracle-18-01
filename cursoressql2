-- Clase de hoy sabado 7 de octubre
create table almacen (numero_almacen integer, 
                      ubicacion_alamacen varchar2(80),
                      constraint pk_na primary key(numero_almacen)
                      );

-- VAMOS AGENERARUN PROCEDIMIENTO ALMACENADO PARA GUARDAR UNA ENTIDAD O REGISTRO DE TIPO ALMACEN  
create or replace procedure guardar_almacen(mi_id IN integer,
                                            mi_ubicacion IN varchar2)
                                            as
                                            begin
                          --AQUI BINE LA LOGICA DEL PROCEDIMIENTO
                          
                          insert into almacen values(mi_id,mi_ubicacion);
                          end;
                          /

--VAMOS A PROBAR QUE FUNCIONA NUESTRO PROCEDIMIENTO
begin
guardar_almacen(1,'PLYMOUTH');
end;
/

SELECT * FROM almacen;

-- Clase de hoy sabado 11 de octubre
create table vendedor (numero_vendedor integer, 
                      ubicacion_vendedor varchar2(60),
                      area_ventas varchar2(60),
                      constraint pk_nv primary key(numero_vendedor)
                      );

                      DESCRIBE almacen;
                      DESCRIBE vendedor;
                      DESCRIBE cliente;
                      DESCRIBE ventas;
                      
create table cliente (numero_cliente integer, 
                      numero_almacen integer,
                      nombre_cliente varchar2(60),
                      constraint pk_nc primary key(numero_cliente),
                      constraint fk1_almacen foreign key(numero_almacen)
                      references almacen(numero_almacen)
                      );

create table ventas (ID_ventas integer, 
                      numero_cliente integer,
                      numero_vendedor integer,
                      montos_ventas float,
                      constraint pk_IDVv1 primary key(ID_ventas),
                      constraint fk_nc foreign key(numero_cliente) references cliente(numero_cliente),
                      constraint fk_nv foreign key (numero_vendedor) references vendedor(numero_vendedor)
                      );
                      
SELECT * from ventas;

--TEMA: CURSORES IMPLICITOS
--creamos la siguinet tabla 
create table cartera_clientes(id integer primary key,
				nombere varchar2(40),
				edad integer, sueldo_base float);
        
        -- INSETAMOS DATOS
        
insert into cartera_clientes values(1,'JUAN',25,60000);
insert into cartera_clientes values(2,'ANA',45,40000);        
insert into cartera_clientes values(3,'PEDRO',32,40000);
insert into cartera_clientes values(4,'IRMA',45,70000);
insert into cartera_clientes values(5,'LUIS',55,20000);

SELECT * FROM cartera_clientes;



declare
sueldo float;
pago_nomina float;
begin
--DECLARAMOS EL CUARSOR IMPLICITO
select sueldo_base into sueldo from cartera_clientes where id=3;
pago_nomina:=sueldo*20;
dbms_output.put_line('Elpago es '|| pago_nomina);
end;
/
set serveroutput on;


-- cursor implicito Ejercicico#2 
--generar la siguiente tabla en oracle que tenga su campos  primary key 
--autoincremento de  2 en  2. empesando desde el 1 
--esdecir lleva la secuencia 1,2,3,4,5,6,7,...., etc.
-- nota: en oracleno existen el uto incremento.
--En oracle para auto incrementar un prymare key se DEBE de usar otro objeto de
--base de datops llamado SECUENCIA

-- PASOS PARA GENERAR UN CAMPO AUTO INCREMENTADO EN ORACLE.


-- 1  crear la tabla 
create table nominas(id_nomina integer primary key,
                      nombre varchar2(60));
                     
--2 crear una secuencia

create sequence sec_nominas
start with 1
increment by 2
nomaxvalue;

--3 crear un procedimiento de incercion paraligar la tabla a la secuencia;
--crear el procedimiento de enlace de tabla y cecuencia

--los argumentso  son el mismo que campos 
--el argumento del primare key es de tipo out
--los argumentos restantes son de tipo int 
--los tipos de datos deben de conicidir con el tipo de dato de las columnas pero 
--sin asignarles el mismo nombre
--los aregumentsos deben de ser en ele mismo orden de la tabla

create or replace procedure guardar_nominas(my_id out integer,
                                          my_nombre in varchar2)
                                          
                                          as 
                                          
                                          begin

select sec_nominas.nextval into my_id from dual;
insert into nominas values (my_id,my_nombre);
end;
/


--finalmente vamos a probar el procedimiento con un bloque pl sql

declare
valor integer;
begin
guardar_nominas(valor,'juan');
dbms_output.put_line('El pk generado es  '||valor);
end;
/

select * from nominas;

